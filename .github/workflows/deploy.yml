name: Deploy FastAPI Application

on:
  push:
    branches: [main]

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest || exit 1

  deploy:
    timeout-minutes: 15
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Update and setup
            sudo apt-get update
            sudo apt-get install -y docker.io nginx docker-compose-plugin
            sudo systemctl start docker
            sudo systemctl enable docker

            # Setup app
            if [ ! -d "/app" ]; then
              sudo git clone https://github.com/KyleRobins/stage-two.git /app
            else
              cd /app
              sudo git pull origin main
            fi

            # Configure Nginx
            sudo bash -c 'cat > /etc/nginx/sites-available/fastapi <<EOL
            server {
                listen 80;
                server_name _;
                
                location / {
                    proxy_pass http://localhost:8000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                }
            }
            EOL'

            sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            sudo nginx -t
            sudo systemctl restart nginx

            # Deploy application
            cd /app
            sudo docker compose down
            sudo docker compose up --build -d

            # Add health check
            timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8000/health)" != "200" ]]; do sleep 5; done' || exit 1
