name: Deploy FastAPI App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Update system and install dependencies
            sudo apt-get update
            sudo apt-get install -y docker.io nginx

            # Setup app directory
            APP_DIR="/home/ubuntu/app"
            if [ ! -d "$APP_DIR" ]; then
              git clone https://github.com/KyleRobins/stage-two.git $APP_DIR
            else
              cd $APP_DIR
              git pull origin main
            fi

            # Stop and remove existing containers
            docker stop fastapi-app || true
            docker rm fastapi-app || true

            # Build and run with exact required command
            cd $APP_DIR
            docker build -t fastapi-app . && docker run -d -p 8000:8000 --name fastapi-app fastapi-app

            # Configure Nginx
            sudo bash -c 'cat > /etc/nginx/sites-available/fastapi <<EOL
            server {
                listen 80 default_server;
                listen [::]:80 default_server;
                server_name _;

                location / {
                    proxy_pass http://127.0.0.1:8000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto http;
                }
            }
            EOL'

            sudo ln -sf /etc/nginx/sites-available/fastapi /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            sudo nginx -t
            sudo systemctl restart nginx

            # Health check
            for i in {1..12}; do
              if curl -s http://localhost/health | grep -q "healthy"; then
                echo "Application is ready!"
                exit 0
              fi
              echo "Waiting... ($i/12)"
              sleep 5
            done
            echo "Application failed to become ready"
            exit 1
